// Code generated by MockGen. DO NOT EDIT.
// Source: internal/models/csrf_model.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "mail/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCsrfRepository is a mock of CsrfRepository interface.
type MockCsrfRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCsrfRepositoryMockRecorder
}

// MockCsrfRepositoryMockRecorder is the mock recorder for MockCsrfRepository.
type MockCsrfRepositoryMockRecorder struct {
	mock *MockCsrfRepository
}

// NewMockCsrfRepository creates a new mock instance.
func NewMockCsrfRepository(ctrl *gomock.Controller) *MockCsrfRepository {
	mock := &MockCsrfRepository{ctrl: ctrl}
	mock.recorder = &MockCsrfRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCsrfRepository) EXPECT() *MockCsrfRepositoryMockRecorder {
	return m.recorder
}

// CreateCsrf mocks base method.
func (m *MockCsrfRepository) CreateCsrf(ctx context.Context, mail string) (*models.Csrf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCsrf", ctx, mail)
	ret0, _ := ret[0].(*models.Csrf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCsrf indicates an expected call of CreateCsrf.
func (mr *MockCsrfRepositoryMockRecorder) CreateCsrf(ctx, mail interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCsrf", reflect.TypeOf((*MockCsrfRepository)(nil).CreateCsrf), ctx, mail)
}

// DeleteCsrf mocks base method.
func (m *MockCsrfRepository) DeleteCsrf(ctx context.Context, CsrfID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCsrf", ctx, CsrfID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCsrf indicates an expected call of DeleteCsrf.
func (mr *MockCsrfRepositoryMockRecorder) DeleteCsrf(ctx, CsrfID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCsrf", reflect.TypeOf((*MockCsrfRepository)(nil).DeleteCsrf), ctx, CsrfID)
}

// GetCsrf mocks base method.
func (m *MockCsrfRepository) GetCsrf(ctx context.Context, CsrfID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCsrf", ctx, CsrfID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCsrf indicates an expected call of GetCsrf.
func (mr *MockCsrfRepositoryMockRecorder) GetCsrf(ctx, CsrfID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCsrf", reflect.TypeOf((*MockCsrfRepository)(nil).GetCsrf), ctx, CsrfID)
}
